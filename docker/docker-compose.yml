services:

  # Traefik Reverse Proxy and SSL Management
  # Traefik will reverse proxy requests to different applications in the stack.
  # This application is composed of one single frontend application, WordPress. If
  # you wanted to expose more applications, for example, phpmyadmin, portainer, etc,
  # you could add the appropriate traefik labels to those services, and traefik will
  # automatically add ssl through ssl (unless you manually supply ssl certs) and
  # exposeing them to the frontend.
  traefik:
    image: traefik:${TRAEFIK_VERSION:-v2.7}
    restart: always
    command:
      - --accesslog
      - --api.insecure=true
      - --providers.docker
      - --providers.docker.exposedbydefault=false
      - --entrypoints.web.address=:80
      - --entrypoints.web.http.redirections.entryPoint.to=websecure
      - --entrypoints.web.http.redirections.entryPoint.scheme=https
      - --entrypoints.web.http.redirections.entrypoint.permanent=true
      - --entrypoints.websecure.address=:443
      - --certificatesresolvers.le.acme.email=${LE_EMAIL:-email@example.com}
      - --certificatesresolvers.le.acme.storage=/letsencrypt/acme.json
      - --certificatesresolvers.le.acme.tlschallenge=true
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - le_data:/letsencrypt
    ports:
      - 80:80
      - 443:443
      - 8080:8080
    networks:
      - traefik

  # Watchtower
  # Automatically pull new docker images as they're updated. This is useful for
  # private sites behind a VPN that don't have public access to tools like webhooks
  # for deploying changes. It's important to lock down your versions to major ranges.
  watchtower:
    image: containrrr/watchtower:latest
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: --interval 30

  # Whoami
  # A simple service to test the reverse proxy and ssl management.
  whoami:
    image: traefik/whoami
    restart: always
    labels:
      - traefik.enable=true
      - traefik.http.routers.whoami.rule=Host(`${HOSTNAME:-localhost}`) && PathPrefix(`/whoami`)
      - traefik.http.routers.whoami.tls=true
      - traefik.http.routers.whoami.tls.certresolver=le
    networks:
      - traefik
  
  # Astro 
  astro:
    container_name: mathcom-astro
    build: 
      context: ../
      dockerfile: ./docker/astro/Dockerfile
      args:
        - PUBLIC_API=$PUBLIC_API
        - PUBLIC_INTERNAL_API=$PUBLIC_INTERNAL_API
    restart: always
    networks:
      - traefik
      - main-wordpress
    ports:
      - 4321:4321
    labels:
      - traefik.enable=true
      - traefik.http.routers.astro.rule=Host(`${ASTRO_HOST:-math.sc.chula.ac.th}`) && PathPrefix(`/astro`)
      - traefik.http.routers.astro.tls=true
      - traefik.http.routers.astro.tls.certresolver=le
      - traefik.http.services.astro.loadbalancer.server.port=4321
      - "com.centurylinklabs.watchtower.enable=false"

volumes:
  db_data:
    driver: local
  db_socket:
    driver: local
  redis_data:
    driver: local
  le_data:
    driver: local
networks:
  traefik:
    driver: bridge
    name: traefik
    external: true
  main-wordpress:
    external: true
